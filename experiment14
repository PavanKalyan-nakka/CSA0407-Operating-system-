
#include <stdio.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>  // For wait()

int main() {
    pid_t pid;

    // Create a new process using fork()
    pid = fork();

    if (pid < 0) {
        // fork() failed
        perror("fork failed");
        return 1;
    } 
    else if (pid == 0) {
        // Child process
        printf("Child process:\n");
        printf("PID: %d\n", getpid());      // Get child's PID
        printf("Parent PID: %d\n", getppid());  // Get child's parent PID
    } 
    else {
        // Parent process
        wait(NULL); // Wait for child process to finish
        printf("Parent process:\n");
        printf("PID: %d\n", getpid());      // Get parent's PID
        printf("Parent PID: %d\n", getppid());  // Get parent's parent PID
    }

    return 0;
}
